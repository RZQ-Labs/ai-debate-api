services:
  db:
    image: postgres:15
    platform: linux/arm64
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-debate_trainer}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  adminer:
    image: adminer
    platform: linux/arm64
    restart: always
    ports:
      - 8088:8080
    depends_on:
      - db

  redis:
    image: redis:7
    platform: linux/arm64
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  n8n:
    image: n8nio/n8n
    platform: linux/arm64
    restart: always
    ports:
      - "5678:5678"
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=db
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n_debate_trainer
      - DB_POSTGRESDB_USER=${POSTGRES_USER:-postgres}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-admin}
    depends_on:
      - db

  backend:
    build: .
    platform: linux/arm64
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app --reload-delay 1
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-debate_trainer}
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - INDOBERT_MODEL_PATH=${INDOBERT_MODEL_PATH:-/models/indobert}
      - LLM_PROVIDER=${LLM_PROVIDER:-openrouter}
      - LOGURU_LEVEL=INFO
    ports:
      - "8000:8000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - db
      - redis
      - n8n

volumes:
  db_data:
  redis_data:
